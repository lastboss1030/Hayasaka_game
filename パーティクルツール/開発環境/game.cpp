//=============================================================================
//
// ゲーム画面処理 [game.cpp]
// Author : taiki hayasaka 
//
//=============================================================================
#include "renderer.h"		
#include "manager.h"		
#include "scene2D.h"		
#include "scene.h"			
#include "input.h"			
#include "player.h"															
#include "game.h"			
#include "Input_Keyboard.h"	
#include "fade.h"
#include "effect.h"
#include "particle.h"
#include "bullet.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
CPolygon *CGame::m_pPolygon = NULL;
CPlayer *CGame::m_pPlayer = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CGame::CGame()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CGame::~CGame()
{

}

//=============================================================================
// 生成処理
//=============================================================================
CGame *CGame::Create()
{
	CGame *pGame = new CGame;

	D3DXVECTOR3 pos;
	D3DXVECTOR3 size;

	// 初期化処理
	pGame->Init(pos, size);
	
	return pGame;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CGame::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// 全てのテクスチャ読み込み
	CGame::LoadAll();

	// プレイヤーの生成
	m_pPlayer = CPlayer::Create(D3DXVECTOR3(SCREEN_CENTER_X, SCREEN_CENTER_Y, 0.0f), D3DXVECTOR3(MAX_PLAYER_X, MAX_PLAYER_Y, 0));

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CGame::Uninit(void)
{
	// 全てのテクスチャを破棄する
	UnloadAll();

	// 全てのオブジェクトを消す
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CGame::Update(void)
{
	// キーボード関係
	CInputKeyboard *plnputKeyboard;
	plnputKeyboard = CManager::GetInputKeyboard();

	// モード関係
	CManager::MODE pManager;
	pManager = CManager::GetMode();

	// フェード関係
	CFade *pFade;
	pFade = CManager::GetFade();
}

//=============================================================================
// 描画処理
//=============================================================================
void CGame::Draw(void)
{

}

//=============================================================================
// テクスチャロード
//=============================================================================
void CGame::LoadAll(void)
{
	// テクスチャの読み込み
	CBullet::Load();
	CPlayer::Load();
	CEffect::Load();
	CParticle::Load();
}

//=============================================================================
// テクスチャ破棄
//=============================================================================
void CGame::UnloadAll(void)
{
	// テクスチャを破棄
	CBullet::Unload();
	CPlayer::Unload();
	CEffect::Unload();
	CParticle::Unload();
}